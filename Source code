//linked list are helpful when creating complex data structures
//when creating  these structs required for linked lists naming them at the top is required

#include<stdio.h>
#include<stdlib.h>

typedef struct island {
char *name;
char *opens;
char *closes;
//you have to name it at the top because in the line below we call it from inside the struct.
//the variables name is next. the type is struct island
struct island *next;
}island;

//here we will define variables with the type of island that we just created
//we dont have to use struct island because we used typedef on the island struct
//we had to do it on the next variable above because its inside the struct

island amity = {"Amity", "09:00", "17:00", NULL};
island craggy = {"craggy", "09:00", "17:00", NULL};
island isla_nublar = {"Isla Nublar", "09:00", "17:00", NULL};
island shutter = {"Shutter", "09:00", "17:00", NULL};
island skull = {"Skull", "09:00", "17:00", NULL};
//now we will link them together using a linked list
amity.next = &craggy;
craggy.next = &isla_nublar;
isla_nublar.next = &shutter;
//now we are gonna insert skull island in between isla_nublar and shutter
isla_nublar.next = &skull;
skull.next = &shutter;
//now its time to do something with them
void display(island *start) {
island *i = start;
for(; i != NULL; i = i->next){
 printf("Name: %s open %s-%s\n", i->name, i->opens, i->closes);
        }
    }
    int main() {
    display(&amity);
    return 0;
    }
